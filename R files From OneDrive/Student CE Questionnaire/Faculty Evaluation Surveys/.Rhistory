length(c(.5:10,5:15,.5:9))
sort(sample(1:30,30,prob=c(.5:10,5:15,.5:9)))
runif(20)
punif(20)
dunif(20)
sample(1:30,20)
sort(sample(1:30,20))
hist(sort(sample(1:30,20)))
sort(sample(1:30,20,prob=c(.5:10,5:15,.5:9)))
sort(sample(1:30,20,prob=c(.5:10,5:15,.5:9)))
sort(sample(1:30,20,prob=c(.5:10,5:15,.5:9)))
hist(sort(sample(1:30,20,prob=c(.5:10,5:15,.5:9))))
c(.5:10,5:10,.5:5)
length(c(.5:10,5:10,.5:5))
length(c(.5:10,5:11,.5:5))
length(c(.5:10,5:9,.5:5))
hist(sort(sample(1:30,20,prob=c(.5:10,5:9,.5:5))))
hist(sort(sample(1:30,20,prob=c(.5:10,5:10,.5:5))))
sort(sample(1:30,20,prob=c(.5:10,5:15,.5:9)))
sort(sample(1:30,20,prob=c(.5:10,5:15,.5:9)))
sort(sample(1:30,20,prob=c(10,1.5:10,5:15,.5:9)))
sort(sample(1:30,20,prob=c(10,1.5:10,5:15,.5:8,10)))
sort(sample(1:30,20,prob=c(10,1.5:10,5:15,.5:8,10)))
c(10,rep(2,9),rep(10,10),rep(4,9),10)
length(c(10,rep(2,9),rep(10,10),rep(4,9),10))
sort(sample(1:30,20,prob=c(10,rep(2,9),rep(10,10),rep(4,9),10)))
sort(sample(1:30,20,prob=c(10,rep(2,9),rep(10,10),rep(4,9),10)))
sort(sample(1:30,20,prob=c(10,rep(2,9),rep(10,10),rep(4,9),10)))
hist(sort(sample(1:30,20,prob=c(10,rep(2,9),rep(10,10),rep(4,9),10))))
hist(c(1,3,4,7,8,9,11,12,13,14,16,17,18,20,21,24,28,30))
hist(c(1,3,4,7,8,9,11,12,13,14,16,17,18,20,21,24,28,30),20)
diff(c(1,3,4,7,8,9,11,12,13,14,16,17,18,20,21,24,28,30)
)
quit()
ver
version
quit()
library(Lock5Data)
data(CommuteAtlanta)
```{r}
time.mean= mean(CommuteAtlanta$Time)
B=1000
n= nrow(CommuteAtlanta)
boot.samples = matrix(sample(CommuteAtlanta$Time, size=B*n, replace=T),nrow=B,ncol=n)
boot.statistics = apply(boot.samples,1,mean)
hist(boot.statistics,100)
time.se = sd(boot.statistics)
me = ceiling(10*2*time.se)/10
round(time.mean,1)+ c(1,-1)*me
```
data(CommuteAtlanta)
my.mean = function(x, indices) {
return( mean( x[indices] ) )
}
time.boot = boot(CommuteAtlanta$Time, my.mean, 10000)
library(boot)
data(CommuteAtlanta)
my.mean = function(x, indices) {
return( mean( x[indices] ) )
}
time.boot = boot(CommuteAtlanta$Time, my.mean, 10000)
b <- read.table("crawley/regdat.txt",header=T)
attach(b)
lm1 <- lm(b$response  ~ b$explanatory)
summary(lm1)
b.coef <- function(formula, data, indices) {
d = data[indices,]
fit = lm(formula, data=d)
return ((fit))
}
summary(b.coef)
b.coef
resp.boot <- boot(b, statistic=b.coef, R=1000, formula=response~explanatory)
b.coef <- function(formula, data, indices) {
d = data[indices,]
fit = lm(formula, data=d)
return (coef(fit))
}
b.coef
resp.boot <- boot(b, statistic=b.coef, R=1000, formula=response~explanatory)
resp.boot
lm1
lm1$model
sampleMean <- function (population)
{
population.mean= mean(population)
B=1000
n= length(population)
boot.samples = matrix(sample(population, size=B*n, replace=T),nrow=B,ncol=n)
boot.statistics = apply(boot.samples,1,mean)
hist(boot.statistics,100)
sample.se = sd(boot.statistics)
me = ceiling(10*2*sample.se)/10
round(population.mean,1)+ c(1,-1)*me
}
Data <- read.csv('c:/iotCOMPARE/iotMODULES.csv',header=T)
Data[grep("2\\.[34]",Data$various.IOTs),45] <- "Phase 2 Module B")
Data[grep("2\\.[34]",Data$various.IOTs),45] <- "Phase 2 Module B"
Data$various.IOTs <- factor(Data$various.IOTs)
#discarding all 5 and missingness > 25% data
discard1 = apply(Data[,3:44],1,function(x) which(sum(is.na(x)) > 11))
discard2 = apply(Data[,3:44],1,function(x) length(unique(x[!is.na(x)])))
a <- Data[-(which(discard1==1 | discard2==1)),]
a = a [a[,1]!="IOT1.1",]; a[,1] <- factor(a[,1]) # discarding IOT1.1 as asked
IOT <- a[,c(1,45,3:44)]
IOT <- melt(IOT)
names(IOT) <- c('various.IOTs','Modules','Questions','Response')
Q <- levels(IOT$Questions)
Q
head(IOT)
library(reshape)
IOT <- a[,c(1,45,3:44)]
IOT <- melt(IOT)
names(IOT) <- c('various.IOTs','Modules','Questions','Response')
Q <- levels(IOT$Questions)
Q
Course.Content <- Q[1:9]
Teach.Strat.Learn.Env <- Q[10:18]
Learn.Res.AV.Aids <- Q[19:22]
Quality.Delivery <- Q[23:30]
Overall.Org <- Q[31:36]
Course.Coord.Eval <- Q[37:42]
IOT[IOT$Questions %in% Course.Content,5] <- 'Course.Content'
IOT[IOT$Questions %in% Teach.Strat.Learn.Env,5] <- 'Teach.Strat.Learn.Env'
IOT[IOT$Questions %in% Learn.Res.AV.Aids,5] <- 'Learn.Res.AV.Aids'
IOT[IOT$Questions %in% Quality.Delivery,5] <- 'Quality.Delivery'
IOT[IOT$Questions %in% Overall.Org,5] <- 'Overall.Organization'
IOT[IOT$Questions %in% Course.Coord.Eval,5] <- 'Course.Coord.Eval'
names(IOT)[5] <- 'Indicators'
IOT$Indicators <- as.factor(IOT$Indicators)
iotnames = factor(levels(IOT$Modules))
head(IOT)
head(IOT,50)
head(IOT,500)
Data <- read.csv('c:/iotCOMPARE/iotMODULES.csv',header=T)
Data[grep("2\\.[34]",Data$various.IOTs),45] <- "Phase 2 Module B"
Data$various.IOTs <- factor(Data$various.IOTs)
#discarding all 5 and missingness > 25% data
discard1 = apply(Data[,3:44],1,function(x) which(sum(is.na(x)) > 11))
discard2 = apply(Data[,3:44],1,function(x) length(unique(x[!is.na(x)])))
a <- Data[-(which(discard1==1 | discard2==1)),]
a = a [grep("2\\.[34]",Data$various.IOTs),]; a[,1] <- factor(a[,1]) # selecting iot3 and iot4
IOT <- a[,c(1,45,3:44)]
IOT <- melt(IOT)
names(IOT) <- c('various.IOTs','Modules','Questions','Response')
Q <- levels(IOT$Questions)
Q
Course.Content <- Q[1:9]
Teach.Strat.Learn.Env <- Q[10:18]
Learn.Res.AV.Aids <- Q[19:22]
Quality.Delivery <- Q[23:30]
Overall.Org <- Q[31:36]
Course.Coord.Eval <- Q[37:42]
IOT[IOT$Questions %in% Course.Content,5] <- 'Course.Content'
IOT[IOT$Questions %in% Teach.Strat.Learn.Env,5] <- 'Teach.Strat.Learn.Env'
IOT[IOT$Questions %in% Learn.Res.AV.Aids,5] <- 'Learn.Res.AV.Aids'
IOT[IOT$Questions %in% Quality.Delivery,5] <- 'Quality.Delivery'
IOT[IOT$Questions %in% Overall.Org,5] <- 'Overall.Organization'
IOT[IOT$Questions %in% Course.Coord.Eval,5] <- 'Course.Coord.Eval'
names(IOT)[5] <- 'Indicators'
IOT$Indicators <- as.factor(IOT$Indicators)
iotnames = factor(levels(IOT$Modules))
head(IOT)
tail(IOT)
Data <- read.csv('c:/iotCOMPARE/iotMODULES.csv',header=T)
Data = Data [grep("2\\.[34]",Data$various.IOTs),]; Data[,1] <- factor(Data[,1]) # selecting iot3 and iot4
Data[grep("2\\.[34]",Data$various.IOTs),45] <- "Phase 2 Module B"
Data$various.IOTs <- factor(Data$various.IOTs)
#discarding all 5 and missingness > 25% data
discard1 = apply(Data[,3:44],1,function(x) which(sum(is.na(x)) > 11))
discard2 = apply(Data[,3:44],1,function(x) length(unique(x[!is.na(x)])))
a <- Data[-(which(discard1==1 | discard2==1)),]
IOT <- a[,c(1,45,3:44)]
IOT <- melt(IOT)
names(IOT) <- c('various.IOTs','Modules','Questions','Response')
Q <- levels(IOT$Questions)
Q
Course.Content <- Q[1:9]
Teach.Strat.Learn.Env <- Q[10:18]
Learn.Res.AV.Aids <- Q[19:22]
Quality.Delivery <- Q[23:30]
Overall.Org <- Q[31:36]
Course.Coord.Eval <- Q[37:42]
IOT[IOT$Questions %in% Course.Content,5] <- 'Course.Content'
IOT[IOT$Questions %in% Teach.Strat.Learn.Env,5] <- 'Teach.Strat.Learn.Env'
IOT[IOT$Questions %in% Learn.Res.AV.Aids,5] <- 'Learn.Res.AV.Aids'
IOT[IOT$Questions %in% Quality.Delivery,5] <- 'Quality.Delivery'
IOT[IOT$Questions %in% Overall.Org,5] <- 'Overall.Organization'
IOT[IOT$Questions %in% Course.Coord.Eval,5] <- 'Course.Coord.Eval'
names(IOT)[5] <- 'Indicators'
IOT$Indicators <- as.factor(IOT$Indicators)
iotnames = factor(levels(IOT$Modules))
head(IOT)
tail(IOT)
cc.ci <- sampleMean(IOT[IOT$Indicators == "Course.Content",4])
cc.ci
cc.ci <- sampleMean(IOT[IOT$Indicators == "Course.Content",4])
cc.ci <- sampleMean(IOT[IOT$Indicators == "Course.Content",4])
cc.ci <- sampleMean(IOT[IOT$Indicators == "Course.Content",4])
cc.ci <- sampleMean(IOT[IOT$Indicators == "Course.Content",4])
for (i in IOT$Indicators)
cc.ci <- sampleMean(IOT[IOT$Indicators == i,4],i)
sampleMean <- function (population, indicator)
{
population.mean= mean(population)
B=1000
n= length(population)
boot.samples = matrix(sample(population, size=B*n, replace=T),nrow=B,ncol=n)
boot.statistics = apply(boot.samples,1,mean)
hist(boot.statistics,100, main=paste("Histogram of ",indicator))
sample.se = sd(boot.statistics)
me = ceiling(10*2*sample.se)/10
print (round(population.mean,1)+ c(1,-1)*me)
}
for (i in IOT$Indicators)
cc.ci <- sampleMean(IOT[IOT$Indicators == i,4],i)
for (i in unique(IOT$Indicators))
cc.ci <- sampleMean(IOT[IOT$Indicators == i,4],i)
sampleMean <- function (population, indicator)
{
population.mean= mean(population)
B=1000
n= length(population)
boot.samples = matrix(sample(population, size=B*n, replace=T),nrow=B,ncol=n)
boot.statistics = apply(boot.samples,1,mean)
hist(boot.statistics,100, main=paste("Histogram of boot statistics of ",indicator))
sample.se = sd(boot.statistics)
me = ceiling(10*2*sample.se)/10
print (round(population.mean,1)+ c(1,-1)*me)
}
for (i in unique(IOT$Indicators))
cc.ci <- sampleMean(IOT[IOT$Indicators == i,4],i)
print (round(population.mean,1)+ c(1,-1)*me)
i
population= IOT[IOT$Indicator==i,4]
head(population)
population.mean= mean(population)
B=1000
n= length(population)
boot.samples = matrix(sample(population, size=B*n, replace=T),nrow=B,ncol=n)
boot.statistics = apply(boot.samples,1,mean)
hist(boot.statistics,100, main=paste("Histogram of boot statistics of ",indicator))
indicator=i
hist(boot.statistics,100, main=paste("Histogram of boot statistics of ",indicator))
indicator
hist(boot.statistics,100, main=paste("Histogram of boot statistics of ",indicator))
hist(boot.statistics,100)#, main=paste("Histogram of boot statistics of ",indicator))
boot.statistics
boot.samples = matrix(sample(population, size=B*n, replace=T),nrow=B,ncol=n)
head(boot.samples)
boot.statistics = apply(boot.samples,1,mean)
boot.statistics
boot.statistics = apply(boot.samples,1,mean,na.rm=T)
boot.statistics
hist(boot.statistics,100, main=paste("Histogram of boot statistics of ",indicator))
sample.se = sd(boot.statistics)
me = ceiling(10*2*sample.se)/10
print (round(population.mean,1)+ c(1,-1)*me)
population.mean
population.mean= mean(population)
population.mean
population.mean= mean(population,na.rm=T)
sample.se
me = ceiling(10*2*sample.se)/10
print (round(population.mean,1)+ c(1,-1)*me)
sampleMean <- function (population, indicator)
{
population.mean= mean(population,na.rm=T)
B=1000
n= length(population)
boot.samples = matrix(sample(population, size=B*n, replace=T),nrow=B,ncol=n)
boot.statistics = apply(boot.samples,1,mean,na.rm=T)
hist(boot.statistics,100, main=paste("Histogram of boot statistics of ",indicator))
sample.se = sd(boot.statistics,na.rm=T)
me = ceiling(10*2*sample.se)/10
print (round(population.mean,1)+ c(1,-1)*me)
}
for (i in unique(IOT$Indicators))
cc.ci <- sampleMean(IOT[IOT$Indicators == i,4],i)
print (paste(indicator, (round(population.mean,1)+ c(1,-1)*me)))
print (round(population.mean,1)+ c(1,-1)*me)
quit()
analyseFacEval <- function ( yr){
library(HH)
all <- read.csv('c:/r/Rspace/Faculty Evaluation Surveys/All Proforma Data (Faculty Survey).csv',header=T)
FM <- c(NULL)
for (fm in as.character(unique(all$Faculty.Member))){FM <-c(fm,FM)}
#png(width=640,height=480)
for (fm in FM) {
sh <- subset(all, all$Faculty.Member== fm & all$Year == yr )
print(fm)
sh <- sh[order(rowSums(sh[,9:108],na.rm=T), decreasing=T),]
sd <- rowSums(sh[,9:108]==1,na.rm=T)
d <- rowSums(sh[,9:108]==2,na.rm=T)
u <- rowSums(sh[,9:108]==3,na.rm=T)
a <- rowSums(sh[,9:108]==4,na.rm=T)
sa <- rowSums(sh[,9:108]==5,na.rm=T)
resp <- cbind ('Strongly.Agree'=sa, 'Agree'=a,'Somewhat agree'=u,'Disagree'=d,'Strongly.Disagree'=sd)
row.names(resp) <- as.character(sh$Question)
print(plot.likert(resp[c(1:18),],ReferenceZero=3,col=c('blue','royalblue','yellow','red','red2'),ylab='Indicators', xlab='Number of Responses',main=paste("Faculty Evaluation Survey\n",fm,'\n','Department:',as.character(sh$Department)[1],'Year:',yr)))
}
#dev.off()
}
analyseFacEval(2016)
all <- read.csv('c:/r/Rspace/Student CE Questionnaire/Students CEQ 2016.csv',header=T)
all <- all[all$Indicators=="Faculty.Eval",]
nrow(all)
analyseFacEval <- function ( yr){
library(HH)
all <- read.csv('c:/r/Rspace/Student CE Questionnaire/Students CEQ 2016.csv',header=T)
all <- all[all$Indicators=="Faculty.Eval",]
FM <- c(NULL)
for (fm in as.character(unique(all$Faculty.Member))){FM <-c(fm,FM)}
#png(width=640,height=480)
for (fm in FM) {
sh <- subset(all, all$Faculty.Member== fm & all$Year == yr )
print(fm)
sh <- sh[order(rowSums(sh[,9:108],na.rm=T), decreasing=T),]
sd <- rowSums(sh[,9:108]==1,na.rm=T)
d <- rowSums(sh[,9:108]==2,na.rm=T)
u <- rowSums(sh[,9:108]==3,na.rm=T)
a <- rowSums(sh[,9:108]==4,na.rm=T)
sa <- rowSums(sh[,9:108]==5,na.rm=T)
resp <- cbind ('Strongly.Agree'=sa, 'Agree'=a,'Somewhat agree'=u,'Disagree'=d,'Strongly.Disagree'=sd)
row.names(resp) <- as.character(sh$Question)
print(plot.likert(resp[c(1:18),],ReferenceZero=3,col=c('blue','royalblue','yellow','red','red2'),ylab='Indicators', xlab='Number of Responses',main=paste("Faculty Evaluation Survey\n",fm,'\n','Department:',as.character(sh$Department)[1],'Year:',yr)))
}
#dev.off()
}
analyseFacEval(2016)
analyse2 <- function ( yr,file){
library(HH)
all <- read.csv(file,header=T)
FM <- c(NULL)
for (fm in as.character(unique(all$Faculty.Member))){FM <-c(fm,FM)}
for (fm in FM) {
sh <- subset(all, all$Faculty.Member== fm & all$Year == yr )
print(fm)
sd <- rowSums(sh[,9:108]==1,na.rm=T)
d <- rowSums(sh[,9:108]==2,na.rm=T)
u <- rowSums(sh[,9:108]==3,na.rm=T)
a <- rowSums(sh[,9:108]==4,na.rm=T)
sa <- rowSums(sh[,9:108]==5,na.rm=T)
resp <- cbind ('Strongly.Agree'=sa, 'Agree'=a,'Uncertain'=u,'Disagree'=d,'Strongly.Disagree'=sd)
indicators <- c('Course-Content&Organization'=3,'Stud.Contribution'=3,'Environment'=4,'Resources'=4,'Quality.of.Delivery'=3,'Assessment'=3,'Faculty.Eval'=19,'Tutorial'=3,'Practical'=2)
ind <- c(NULL)
for (i in 1:9) ind <- c(ind, (rep(names(indicators[i]), indicators[i])))
ind[45]='Full.Time'
ind[46]='Gender'
ind[47]='Age'
row.names(resp) <- ind
print(likert(resp[c(1:24,40:44),],col=c('seagreen','Green','Yellow','Red','darkred'),ylab='Indicators', xlab='Number of Responses',main=paste(as.character(sh$Course.Title)[1],'taught by',fm,'\n','Institute/Center/Department:',as.character(sh$Department)[1],'Year:',yr)))
}
}
analyse2(2016,"C:/R/Rspace/Student CE Questionnaire//Students CEQ 2016.csv")
analyse2 <- function ( yr,file){
library(HH)
all <- read.csv(file,header=T)
FM <- c(NULL)
for (fm in as.character(unique(all$Faculty.Member))){FM <-c(fm,FM)}
for (fm in FM) {
sh <- subset(all, all$Faculty.Member== fm & all$Year == yr )
print(fm)
sd <- rowSums(sh[,9:108]==1,na.rm=T)
d <- rowSums(sh[,9:108]==2,na.rm=T)
u <- rowSums(sh[,9:108]==3,na.rm=T)
a <- rowSums(sh[,9:108]==4,na.rm=T)
sa <- rowSums(sh[,9:108]==5,na.rm=T)
resp <- cbind ('Strongly.Agree'=sa, 'Agree'=a,'Uncertain'=u,'Disagree'=d,'Strongly.Disagree'=sd)
indicators <- c('Course-Content&Organization'=3,'Stud.Contribution'=3,'Environment'=4,'Resources'=4,'Quality.of.Delivery'=3,'Assessment'=3,'Faculty.Eval'=19,'Tutorial'=3,'Practical'=2)
ind <- c(NULL)
for (i in 1:9) ind <- c(ind, (rep(names(indicators[i]), indicators[i])))
ind[45]='Full.Time'
ind[46]='Gender'
ind[47]='Age'
row.names(resp) <- ind
print(likert(resp[c(1:24,40:44),],col=c('seagreen','Green','Yellow','Red','darkred'),ylab='Indicators', xlab='Number of Responses',main=paste("Students Course Eval Survey",as.character(sh$Course.Title)[1],'taught by',fm,'\n','Institute/Center/Department:',as.character(sh$Department)[1],'Year:',yr)))
}
}
analyse2(2016,"C:/R/Rspace/Student CE Questionnaire//Students CEQ 2016.csv")
analyse2 <- function ( yr,file){
library(HH)
all <- read.csv(file,header=T)
FM <- c(NULL)
for (fm in as.character(unique(all$Faculty.Member))){FM <-c(fm,FM)}
for (fm in FM) {
sh <- subset(all, all$Faculty.Member== fm & all$Year == yr )
print(fm)
sd <- rowSums(sh[,9:108]==1,na.rm=T)
d <- rowSums(sh[,9:108]==2,na.rm=T)
u <- rowSums(sh[,9:108]==3,na.rm=T)
a <- rowSums(sh[,9:108]==4,na.rm=T)
sa <- rowSums(sh[,9:108]==5,na.rm=T)
resp <- cbind ('Strongly.Agree'=sa, 'Agree'=a,'Uncertain'=u,'Disagree'=d,'Strongly.Disagree'=sd)
indicators <- c('Course-Content&Organization'=3,'Stud.Contribution'=3,'Environment'=4,'Resources'=4,'Quality.of.Delivery'=3,'Assessment'=3,'Faculty.Eval'=19,'Tutorial'=3,'Practical'=2)
ind <- c(NULL)
for (i in 1:9) ind <- c(ind, (rep(names(indicators[i]), indicators[i])))
ind[45]='Full.Time'
ind[46]='Gender'
ind[47]='Age'
row.names(resp) <- ind
print(likert(resp[c(1:24,40:44),],col=c('seagreen','Green','Yellow','Red','darkred'),ylab='Indicators', xlab='Number of Responses',main=paste("Students Course Eval Survey\n",as.character(sh$Course.Title)[1],'taught by',fm,'\n','Institute/Center/Department:',as.character(sh$Department)[1],'Year:',yr)))
}
}
analyse2(2016,"C:/R/Rspace/Student CE Questionnaire//Students CEQ 2016.csv")
exit()
quit()
getwd()
setwd("c:/r/Rspace/Faculty Evaluation Surveys/")
analyseFacEval <- function ( yr){
library(HH)
all <- read.csv('c:/r/Rspace/Student CE Questionnaire/Students CEQ 2016.csv',header=T)
all <- all[all$Indicators=="Faculty.Eval",]
FM <- c(NULL)
for (fm in as.character(unique(all$Faculty.Member))){FM <-c(fm,FM)}
#png(width=640,height=480)
for (fm in FM) {
sh <- subset(all, all$Faculty.Member== fm & all$Year == yr )
print(fm)
sh <- sh[order(rowSums(sh[,9:108],na.rm=T), decreasing=T),]
sd <- rowSums(sh[,9:108]==1,na.rm=T)
d <- rowSums(sh[,9:108]==2,na.rm=T)
u <- rowSums(sh[,9:108]==3,na.rm=T)
a <- rowSums(sh[,9:108]==4,na.rm=T)
sa <- rowSums(sh[,9:108]==5,na.rm=T)
resp <- cbind ('Strongly.Agree'=sa, 'Agree'=a,'Somewhat agree'=u,'Disagree'=d,'Strongly.Disagree'=sd)
row.names(resp) <- as.character(sh$Question)
png(fm,width=800,height=600)
print(plot.likert(resp[c(1:18),],ReferenceZero=3,col=c('blue','royalblue','yellow','red','red2'),ylab='Indicators', xlab='Number of Responses',main=paste("Faculty Evaluation Survey\n",fm,'\n','Department:',as.character(sh$Department)[1],'Year:',yr)))
dev.off()
}
#dev.off()
}
analyseFacEval(2016)
analyseFacEval <- function ( yr){
library(HH)
all <- read.csv('c:/r/Rspace/Student CE Questionnaire/Students CEQ 2016.csv',header=T)
all <- all[all$Indicators=="Faculty.Eval",]
FM <- c(NULL)
for (fm in as.character(unique(all$Faculty.Member))){FM <-c(fm,FM)}
#png(width=640,height=480)
for (fm in FM) {
sh <- subset(all, all$Faculty.Member== fm & all$Year == yr )
print(fm)
sh <- sh[order(rowSums(sh[,9:108],na.rm=T), decreasing=T),]
sd <- rowSums(sh[,9:108]==1,na.rm=T)
d <- rowSums(sh[,9:108]==2,na.rm=T)
u <- rowSums(sh[,9:108]==3,na.rm=T)
a <- rowSums(sh[,9:108]==4,na.rm=T)
sa <- rowSums(sh[,9:108]==5,na.rm=T)
resp <- cbind ('Strongly.Agree'=sa, 'Agree'=a,'Somewhat agree'=u,'Disagree'=d,'Strongly.Disagree'=sd)
row.names(resp) <- as.character(sh$Question)
png(paste(fm,".png",collapse=""),width=800,height=600)
print(plot.likert(resp[c(1:18),],ReferenceZero=3,col=c('blue','royalblue','yellow','red','red2'),ylab='Indicators', xlab='Number of Responses',main=paste("Faculty Evaluation Survey\n",fm,'\n','Department:',as.character(sh$Department)[1],'Year:',yr)))
dev.off()
}
#dev.off()
}
analyseFacEval(2016)
sampleMean <- function (population, indicator)
{
population.mean= mean(population,na.rm=T)
B=1000
n= length(population)
boot.samples = matrix(sample(population, size=B*n, replace=T),nrow=B,ncol=n)
boot.statistics = apply(boot.samples,1,mean,na.rm=T)
hist(boot.statistics,100, main=paste("Histogram of boot statistic of ",indicator),xlim=c(2.6,4.4))
sample.se = sd(boot.statistics,na.rm=T)
me = ceiling(10*2*sample.se)/10
print (round(population.mean,1)+ c(1,-1)*me)
}
f <- read.csv("Faculty Survey 2014 (Responses).csv",header=T,colClasses="character")
#cleaning
f$Timestamp <- as.Date(f$Timestamp,"%m/%d/%Y")
f = f[grep("(2015)|(2016)",f$Timestamp),]
f=f[,2:15]
f[f=="Very Satisfied"] <- 5
f[f=="Satisfied"] <- 4
f[f=="Uncertain"] <- 3
f[f=="Dissatisfied"] <- 2
f[f=="Very Dissatisfied"] <- 1
par(mfrow=c(3,1))
for ( i in names(f))
sampleMean(as.integer(f[,names(f)==i]),i)
f <- read.csv("Faculty Survey 2014 (Responses).csv",header=T,colClasses="character")
f <- read.csv("c:/r/Rspace/faculty survey 2015/Faculty Survey 2014 (Responses).csv",header=T,colClasses="character")
sampleMean <- function (population, indicator)
{
population.mean= mean(population,na.rm=T)
B=1000
n= length(population)
boot.samples = matrix(sample(population, size=B*n, replace=T),nrow=B,ncol=n)
boot.statistics = apply(boot.samples,1,mean,na.rm=T)
hist(boot.statistics,100, main=paste("Histogram of boot statistic of ",indicator),xlim=c(2.6,4.4))
sample.se = sd(boot.statistics,na.rm=T)
me = ceiling(10*2*sample.se)/10
print (round(population.mean,1)+ c(1,-1)*me)
}
f <- read.csv("c:/r/Rspace/faculty survey 2015/Faculty Survey 2014 (Responses).csv",header=T,colClasses="character")
#cleaning
f$Timestamp <- as.Date(f$Timestamp,"%m/%d/%Y")
f = f[grep("(2015)|(2016)",f$Timestamp),]
f=f[,2:15]
f[f=="Very Satisfied"] <- 5
f[f=="Satisfied"] <- 4
f[f=="Uncertain"] <- 3
f[f=="Dissatisfied"] <- 2
f[f=="Very Dissatisfied"] <- 1
par(mfrow=c(3,1))
for ( i in names(f))
sampleMean(as.integer(f[,names(f)==i]),i)
quit()
